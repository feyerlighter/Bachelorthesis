@article{abbasiAdaptiveScalableDatabase2024,
  title = {Adaptive and {{Scalable Database Management}} with {{Machine Learning Integration}}: {{A PostgreSQL Case Study}}},
  shorttitle = {Adaptive and {{Scalable Database Management}} with {{Machine Learning Integration}}},
  author = {Abbasi, Maryam and Bernardo, Marco V. and Váz, Paulo and Silva, José and Martins, Pedro},
  date = {2024-09},
  journaltitle = {Information},
  volume = {15},
  number = {9},
  pages = {574},
  publisher = {Multidisciplinary Digital Publishing Institute},
  issn = {2078-2489},
  doi = {10.3390/info15090574},
  url = {https://www.mdpi.com/2078-2489/15/9/574},
  urldate = {2024-10-05},
  abstract = {The increasing complexity of managing modern database systems, particularly in terms of optimizing query performance for large datasets, presents significant challenges that traditional methods often fail to address. This paper proposes a comprehensive framework for integrating advanced machine learning (ML) models within the architecture of a database management system (DBMS), with a specific focus on PostgreSQL. Our approach leverages a combination of supervised and unsupervised learning techniques to predict query execution times, optimize performance, and dynamically manage workloads. Unlike existing solutions that address specific optimization tasks in isolation, our framework provides a unified platform that supports real-time model inference and automatic database configuration adjustments based on workload patterns. A key contribution of our work is the integration of ML capabilities directly into the DBMS engine, enabling seamless interaction between the ML models and the query optimization process. This integration allows for the automatic retraining of models and dynamic workload management, resulting in substantial improvements in both query response times and overall system throughput. Our evaluations using the Transaction Processing Performance Council Decision Support (TPC-DS) benchmark dataset at scale factors of 100 GB, 1 TB, and 10 TB demonstrate a reduction of up to 42\% in query execution times and a 74\% improvement in throughput compared with traditional approaches. Additionally, we address challenges such as potential conflicts in tuning recommendations and the performance overhead associated with ML integration, providing insights for future research directions. This study is motivated by the need for autonomous tuning mechanisms to manage large-scale, heterogeneous workloads while answering key research questions, such as the following: (1) How can machine learning models be integrated into a DBMS to improve query optimization and workload management? (2) What performance improvements can be achieved through dynamic configuration tuning based on real-time workload patterns? Our results suggest that the proposed framework significantly reduces the need for manual database administration while effectively adapting to evolving workloads, offering a robust solution for modern large-scale data environments.},
  issue = {9},
  langid = {english},
  keywords = {database optimization,dynamic workload management,machine learning integration,PostgreSQL,query performance,real-time system tuning},
  file = {/Users/A200017936/Zotero/storage/U458K8AM/Abbasi et al. - 2024 - Adaptive and Scalable Database Management with Machine Learning Integration A PostgreSQL Case Study.pdf}
}

@article{andersonDockerSoftwareEngineering2015,
  title = {Docker [{{Software}} Engineering]},
  author = {Anderson, Charles},
  date = {2015-05},
  journaltitle = {IEEE Software},
  volume = {32},
  number = {3},
  pages = {102-c3},
  issn = {1937-4194},
  doi = {10.1109/MS.2015.62},
  url = {https://ieeexplore.ieee.org/document/7093032/figures#figures},
  urldate = {2024-10-03},
  abstract = {In episode 217 of Software Engineering Radio, host Charles Anderson talks with James Turnbull, a software developer and security specialist who's vice president of services at Docker. Lightweight Docker containers are rapidly becoming a tool for deploying microservice-based architectures.},
  eventtitle = {{{IEEE Software}}},
  keywords = {Docker,Docker containers,Interviews,James Turnbull,microservices,SE Radio,Software development,Software engineering,Software Engineering Radio,Virtual machining}
}

@online{canorodriguezPythonPackagingGreat2024,
  title = {Python {{Packaging}} Is {{Great Now}}: `uv` Is All You Need},
  shorttitle = {Python {{Packaging}} Is {{Great Now}}},
  author = {Cano Rodríguez, Juan Luis},
  date = {2024-08-10},
  url = {https://dev.to/astrojuanlu/python-packaging-is-great-now-uv-is-all-you-need-4i2d},
  urldate = {2024-10-05},
  abstract = {The title of this post is a reference to Glyph's Python Packaging is Good Now. I think it's safe to...},
  langid = {english},
  organization = {DEV Community},
  file = {/Users/A200017936/Zotero/storage/3PB9K73A/python-packaging-is-great-now-uv-is-all-you-need-4i2d.html}
}

@article{carrionKubernetesSchedulingTaxonomy2022,
  title = {Kubernetes {{Scheduling}}: {{Taxonomy}}, {{Ongoing Issues}} and {{Challenges}}},
  shorttitle = {Kubernetes {{Scheduling}}},
  author = {Carrión, Carmen},
  date = {2022-12-15},
  journaltitle = {ACM Comput. Surv.},
  volume = {55},
  number = {7},
  pages = {138:1--138:37},
  issn = {0360-0300},
  doi = {10.1145/3539606},
  url = {https://dl.acm.org/doi/10.1145/3539606},
  urldate = {2024-10-05},
  abstract = {Continuous integration enables the development of microservices-based applications using container virtualization technology. Container orchestration systems such as Kubernetes, which has become the de facto standard, simplify the deployment of container-based applications. However, developing efficient and well-defined orchestration systems is a challenge. This article focuses specifically on the scheduler, a key orchestrator task that assigns physical resources to containers. Scheduling approaches are designed based on different Quality of Service (QoS) parameters to provide limited response time, efficient energy consumption, better resource utilization, and other things. This article aims to establish insight knowledge into Kubernetes scheduling, find the main gaps, and thus guide future research in the area. Therefore, we conduct a study of empirical research on Kubernetes scheduling techniques and present a new taxonomy for Kubernetes scheduling. The challenges, future direction, and research opportunities are also discussed.},
  file = {/Users/A200017936/Zotero/storage/68A4RBIT/Carrión - 2022 - Kubernetes Scheduling Taxonomy, Ongoing Issues and Challenges.pdf}
}

@article{chenModelAlgorithmResearch2023,
  title = {Model {{Algorithm Research}} Based on {{Python Fast API}}},
  author = {Chen, Junqiao},
  date = {2023-09-21},
  journaltitle = {Frontiers in Science and Engineering},
  volume = {3},
  number = {9},
  pages = {7--10},
  issn = {2710-0588},
  doi = {10.54691/fse.v3i9.5591},
  url = {https://bcpublication.org/index.php/FSE/article/view/5591},
  urldate = {2024-10-05},
  abstract = {In recent years, the application of Python programming language in developing web services has gained significant attention, with FASTAPI emerging as a prominent framework for its rapid development and efficient performance. This paper delves into the realm of model algorithm research, leveraging the capabilities of Python's FASTAPI framework. Through this study, we explore the integration of advanced algorithms within the context of web-based applications. By focusing on the seamless amalgamation of algorithmic processes with FASTAPI's structure, we aim to demonstrate the feasibility and advantages of utilizing this combination in various research and practical scenarios. Coupled with illustrative examples, this paper highlights the potential of Python FASTAPI as a robust platform for driving model algorithm research across diverse domains.},
  issue = {9},
  langid = {english},
  keywords = {Algorithm Model.,Fast API,Python},
  file = {/Users/A200017936/Zotero/storage/KFCKFMQQ/Chen - 2023 - Model Algorithm Research based on Python Fast API.pdf}
}

@inproceedings{christensenPythonPipelineRapid2022,
  title = {A {{Python Pipeline}} for {{Rapid Application Development}} ({{RAD}})},
  author = {Christensen, Scott and Brown, Marvin and Haehnel, Robert and Church, Joshua and Catlett, Amanda and Schofield, Dallon and Brannon, Quyen and Smith, Stacy},
  date = {2022-01-01},
  pages = {240--243},
  doi = {10.25080/majora-212e5952-023}
}

@article{fareezPOPULARPYTHONLIBRARIES2020,
  title = {{{POPULAR PYTHON LIBRARIES AND THEIR APPLICATION DOMAINS}}},
  author = {family=Fareez, given=MMM, given-i=MMM and Thangarajah, Vinothraj and Saabith, Sayeth},
  date = {2020-11-05},
  abstract = {Abstract —Python is a general purpose, dynamic, high-level, and interpreted programming language. It supports Object Oriented programming approach to develop applications. It is simple and easy to learn and provides lots of high-level data structures. Python is supporting the development of a wide range of applications such as Build a website, develop a Game, Perform Computer Vision (Facilities like face-detection and color-detection), Implement Machine Learning (Give a computer the ability to learn), Enable Robotics, Perform Web Scraping (Harvest data from websites), Perform Data Analysis. Automate a web browser, Perform Scripting, Perform Scientific Computing, Build Artificial Intelligence. In this paper, we first analyze you to Python programming language popularity and features. Moreover, this paper specifying applications areas where python can be applied and popular libraries which are using in Python applications.},
  file = {/Users/A200017936/Zotero/storage/BM7U7267/Fareez et al. - 2020 - POPULAR PYTHON LIBRARIES AND THEIR APPLICATION DOMAINS.pdf}
}

@inproceedings{floydSystematicLookPrototyping1984,
  title = {A {{Systematic Look}} at {{Prototyping}}},
  booktitle = {Approaches to {{Prototyping}}},
  author = {Floyd, Christiane},
  editor = {Budde, Reinhard and Kuhlenkamp, Karin and Mathiassen, Lars and Züllighoven, Heinz},
  date = {1984},
  pages = {1--18},
  publisher = {Springer},
  location = {Berlin, Heidelberg},
  doi = {10.1007/978-3-642-69796-8_1},
  abstract = {This paper originates from a series of discussions between programme committee members during the preparation of the Working Conference on Prototyping. While trying to define the topic of the conference, it became clear to us that we each held our own viewpoint on the subject. Views differed as to the specific use of terminology as well as the application-oriented emphasis on particular strategies, and so did our judgements about the potential usefulness of prototyping. The views did not, however, seem contradictory but rather complementary.},
  isbn = {978-3-642-69796-8},
  langid = {english},
  file = {/Users/A200017936/Zotero/storage/BESRNHM3/Floyd - 1984 - A Systematic Look at Prototyping.pdf}
}

@article{joshiOverviewPythonLibraries,
  title = {An {{Overview}} of {{Python Libraries}} for {{Data Science}} | {{Journal}} of {{Engineering Technology}} and {{Applied Physics}}},
  author = {Joshi, Ankush and Tiwari, Haripriya},
  url = {https://journals.mmupress.com/index.php/jetap/article/view/793},
  urldate = {2024-10-05},
  langid = {american},
  keywords = {Data analysis,Data science,Data visualization,Deep learning,Machine learning,Python},
  file = {/Users/A200017936/Zotero/storage/AFRYDB3R/Joshi und Tiwari - An Overview of Python Libraries for Data Science  Journal of Engineering Technology and Applied Phy.pdf}
}

@article{kaluzaComparisonFrontendFrameworks2018,
  title = {Comparison of Front-End Frameworks for Web Applications Development},
  author = {Kaluža, Marin and Vukelic, Bernard},
  date = {2018-01-01},
  journaltitle = {Zbornik Veleučilišta u Rijeci},
  shortjournal = {Zbornik Veleučilišta u Rijeci},
  volume = {6},
  pages = {261--282},
  doi = {10.31784/zvr.6.1.19},
  abstract = {Moderne web-aplikacije, zbog funkcionalnosti koje omogućuju u korisničkom sučelju, imaju složenu programsku strukturu. Ručno pisanje programskog koda zbog složenosti cijele aplikacije može rezultirati neujednačenom kvalitetom i sadržajem pojedinih aplikacijskih djelova. Održavanje tako razvijanih aplikacija otežano je. Zbog toga se web-aplikacije često razvijaju korištenjem različitih frameworka. Framework omogućuje strukturiranje, jednostavnije i ujednačenije pisanje programskog koda, te time olakšava održavanje web-aplikacije. Postoji puno frameworka koji se mogu koristiti u razvoju web-aplikacija, i to za različite dijelove aplikacije, a oni analizirani u ovom radu koriste se u razvoju front end dijela web-aplikacije. Prema načinu izvođenja webaplikacije mogu biti Multi Page (MPA) ili Single Page (SPA). U radu je objašnjena različitost između MPA i SPA web-aplikacija. Pokazane su prednosti i nedostatci MPA u odnosu na SPA web-aplikacije. Postavljene su zahtijevane karakteristike frameworka koji je optimiziran za izradu MPA i SPA web-aplikacija. Testirana je hipoteza: Postoji framework koji je prilagođen za izradu i MPA i SPA aplikacija. Analizirane su mogućnosti, arhitektura i načini razvoja web-aplikacija pomoću front end frameworka te prilagođenost takvih frameworka za razvoj MPA i SPA web-aplikacija. Izvršen je odabir frameworka za testiranje hipoteze prema popularnosti na tržištu. Zahtijevane karakteristike analizirane su na 3 najpopularnija frameworka: Angular, Vue.js i React-js. Pokazano je da je Vue.js framework najoptimiziraniji framework za izradu i MPA i SPA aplikacija.},
  file = {/Users/A200017936/Zotero/storage/L3G29XXS/Kaluža und Vukelic - 2018 - Comparison of front-end frameworks for web applications development.pdf}
}

@article{krishnamoorthyEvolutionReadingComprehension2021,
  title = {Evolution of {{Reading Comprehension}} and {{Question Answering Systems}}},
  author = {Krishnamoorthy, Venkatesh},
  date = {2021-01-01},
  journaltitle = {Procedia Computer Science},
  shortjournal = {Procedia Computer Science},
  series = {Big {{Data}}, {{IoT}}, and {{AI}} for a {{Smarter Future}}},
  volume = {185},
  pages = {231--238},
  issn = {1877-0509},
  doi = {10.1016/j.procs.2021.05.024},
  url = {https://www.sciencedirect.com/science/article/pii/S1877050921011066},
  urldate = {2024-10-03},
  abstract = {Natural Language Processing (NLP) has witnessed considerable advances in textual understanding through statistical and rule-based techniques, which have now yielded to developments in the field of neural networks and deep learning. The paper surveys research relevant to the topic of Reading Comprehension and Question Answering (QA) implementations. The initial focus of the paper is on Attention and Transformer models. A brief description of the architectures is presented highlighting the essence of the ‘Attention is all you Need’ paper wherein the authors of Bidirectional Encoding Transformer (BERT) have elucidated the significant departure from the recurrence concept of Recurrent Neural Networks (RNN). Subsequently the trends in Open Domain Question Answering (ODQA) which mark the progression from the passage- based question answering is presented. Of particular interest is Haystack which is an end-to-end open-source framework for Question Answering \& Neural search. This field seems a promising avenue for a more intelligent form of ‘search’. In a nutshell, the paper weaves through RNNs, Long Short-Term Memory (LSTM), and the currently trending Attention based Transformer models in NLP. Finally, we dwell on more contemporary pieces of research such as ODQA, Multi-Hop QA, evaluation using Adversarial Networks.},
  keywords = {Attention,BERT,ELMo,HayStack,Knowledge Graph,LSTM,Multi-Hop,RNN,SQUaD,Transfer Learning,Transformer}
}

@article{liResearchSinglePage2021,
  title = {The {{Research}} on {{Single Page Application Front-end}} Development {{Based}} on {{Vue}}},
  author = {Li, Nian and Zhang, Bo},
  date = {2021-04},
  journaltitle = {Journal of Physics: Conference Series},
  shortjournal = {J. Phys.: Conf. Ser.},
  volume = {1883},
  number = {1},
  pages = {012030},
  publisher = {IOP Publishing},
  issn = {1742-6596},
  doi = {10.1088/1742-6596/1883/1/012030},
  url = {https://dx.doi.org/10.1088/1742-6596/1883/1/012030},
  urldate = {2024-10-05},
  abstract = {‘Vuejs’ is a popular front-end framework, which uses MVVM (Model View View-Model) design pattern to support data-driven and component-based development. This paper discusses the basic working principle and development mode of Vue, and on this basis, uses SPA (Single Page Application) to design and implement a mobile mall front-end page based on Vue. This research fully demonstrates the advantages of front-end and back-end separation technology in Web development, and provides a powerful front-end support for full stack development.},
  langid = {english},
  file = {/Users/A200017936/Zotero/storage/3G8IYBH7/Li und Zhang - 2021 - The Research on Single Page Application Front-end development Based on Vue.pdf}
}

@article{lortiePythonModernData2022,
  title = {Python and {{R}} for the {{Modern Data Scientist}}},
  author = {Lortie, Christopher J.},
  date = {2022-07-13},
  journaltitle = {Journal of Statistical Software},
  volume = {103},
  pages = {1--4},
  issn = {1548-7660},
  doi = {10.18637/jss.v103.b02},
  url = {https://doi.org/10.18637/jss.v103.b02},
  urldate = {2024-10-05},
  langid = {english},
  file = {/Users/A200017936/Zotero/storage/IUT9WRLG/Lortie - 2022 - Python and R for the Modern Data Scientist.pdf}
}

@article{mokogintaDevelopingModernJavaScript2024,
  title = {Developing {{Modern JavaScript Frameworks}} for {{Building Interactive Single-Page Applications}}},
  author = {Mokoginta, Deyidi and Putri, Desfita Eka and Wattimena, Fegie Yoanti},
  date = {2024-08-01},
  journaltitle = {International Journal Software Engineering and Computer Science (IJSECS)},
  volume = {4},
  number = {2},
  pages = {484--496},
  issn = {2776-3242},
  doi = {10.35870/ijsecs.v4i2.2831},
  url = {https://journal.lembagakita.org/index.php/ijsecs/article/view/2831},
  urldate = {2024-10-05},
  abstract = {The rapid evolution of modern JavaScript frameworks has significantly enhanced the development of interactive and responsive Single-Page Applications (SPAs). This study compares three prominent JavaScript frameworks—Angular, React, and Vue.Js—focusing on their application in SPA development. The research methodology involves a literature review, a comparative analysis of the critical features of each framework, and a practical implementation to assess their performance, usability, and flexibility. The findings reveal that each framework exhibits distinct advantages and limitations that affect their suitability for different project requirements. Angular is characterized by its extensive built-in features and robust architecture, React by its high flexibility and superior performance, and Vue.js by its user-friendly approach and development efficiency. These results offer valuable insights for developers in selecting the most appropriate framework for their specific project needs, ultimately contributing to more efficient and effective web development.},
  issue = {2},
  langid = {english},
  keywords = {Vue.js},
  file = {/Users/A200017936/Zotero/storage/EW4QC4YM/Mokoginta et al. - 2024 - Developing Modern JavaScript Frameworks for Building Interactive Single-Page Applications.pdf}
}

@article{n.EvaluatingDevopsTools2023,
  title = {Evaluating {{Devops Tools}} and {{Technologies}} for {{Effective Cloud Management}}},
  author = {N., Nivedhaa and Pub, Iaeme},
  date = {2023-05-15},
  volume = {1},
  pages = {20--32},
  abstract = {This paper explores the integration of DevOps practices with cloud management to enhance operational efficiency and agility in modern IT environments. It provides a comprehensive overview of key DevOps tools and technologies used for managing cloud infrastructure, including Infrastructure as Code (IaC) tools, CI/CD pipelines, configuration management solutions, and monitoring systems. A comparative analysis of prominent tools such as Terraform, AWS CloudFormation, Jenkins, and Kubernetes highlights their strengths, limitations, and suitability for various use cases. The paper also addresses the challenges organizations face in adopting DevOps within cloud environments, including complexity, security, and integration issues, while offering best practices to overcome these obstacles. Furthermore, it examines emerging trends and innovations, including AI-driven automation, serverless computing, multi-cloud strategies, and edge computing, which are shaping the future of DevOps and cloud management. By providing insights into these advancements and their implications, the paper aims to guide organizations in optimizing their DevOps practices and leveraging cloud technologies to drive business success and maintain a competitive edge.},
  file = {/Users/A200017936/Zotero/storage/DX93YAX7/N. und Pub - 2023 - Evaluating Devops Tools and Technologies for Effective Cloud Management.pdf}
}

@inproceedings{openjaStudyingPracticesDeploying2022,
  title = {Studying the {{Practices}} of {{Deploying Machine Learning Projects}} on {{Docker}}},
  booktitle = {Proceedings of the 26th {{International Conference}} on {{Evaluation}} and {{Assessment}} in {{Software Engineering}}},
  author = {Openja, Moses and Majidi, Forough and Khomh, Foutse and Chembakottu, Bhagya and Li, Heng},
  date = {2022-06-13},
  series = {{{EASE}} '22},
  pages = {190--200},
  publisher = {Association for Computing Machinery},
  location = {New York, NY, USA},
  doi = {10.1145/3530019.3530039},
  url = {https://dl.acm.org/doi/10.1145/3530019.3530039},
  urldate = {2024-10-05},
  abstract = {Docker is a containerization service that allows for convenient deployment of websites, databases, applications’ APIs, and machine learning (ML) models with a few lines of code. Studies have recently explored the use of Docker for deploying general software projects with no specific focus on how Docker is used to deploy ML-based projects. In this study, we conducted an exploratory study to understand how Docker is being used to deploy ML-based projects. As the initial step, we examined the categories of ML-based projects that use Docker. We then examined why and how these projects use Docker, and the characteristics of the resulting Docker images. Our results indicate that six categories of ML-based projects use Docker for deployment, including ML Applications, MLOps/ AIOps, Toolkits, DL Frameworks, Models, and Documentation. We derived the taxonomy of 21 major categories representing the purposes of using Docker, including those specific to models such as model management tasks (e.g., testing, training). We then showed that ML engineers use Docker images mostly to help with the platform portability, such as transferring the software across the operating systems, runtimes such as GPU, and language constraints. However, we also found that more resources may be required to run the Docker images for building ML-based software projects due to the large number of files contained in the image layers with deeply nested directories. We hope to shed light on the emerging practices of deploying ML software projects using containers and highlight aspects that should be improved.},
  isbn = {978-1-4503-9613-4},
  file = {/Users/A200017936/Zotero/storage/T4SQNJ9P/Openja et al. - 2022 - Studying the Practices of Deploying Machine Learning Projects on Docker.pdf}
}

@article{shrivastavaDesignImplementationChatbot,
  title = {Design and {{Implementation}} of {{Chatbot}} Using {{Python}}},
  author = {Shrivastava, Samiksha},
  journaltitle = {IJFMR - International Journal For Multidisciplinary Research},
  volume = {5},
  number = {6},
  publisher = {IJFMR},
  issn = {2582-2160},
  doi = {10.36948/ijfmr.2023.v05i06.9993},
  url = {https://www.ijfmr.com/research-paper.php?id=9993},
  urldate = {2024-10-04},
  file = {/Users/A200017936/Zotero/storage/I5ADHGTU/Shrivastava - Design and Implementation of Chatbot using Python.pdf}
}

@article{syedQuestionAnsweringChatbot2021,
  title = {Question {{Answering Chatbot}} for {{Troubleshooting Queries}} Based on {{Transfer Learning}}},
  author = {Syed, Zeeshan Haque and Trabelsi, Asma and Helbert, Emmanuel and Bailleau, Vincent and Muths, Christian},
  date = {2021},
  journaltitle = {Procedia Computer Science},
  shortjournal = {Procedia Computer Science},
  volume = {192},
  pages = {941--950},
  issn = {18770509},
  doi = {10.1016/j.procs.2021.08.097},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S1877050921015854},
  urldate = {2024-10-03},
  abstract = {Open-Domain Question Answering (ODQA) is a technique for finding an answer to a given query from a large set of documents. In this paper, we present an experimentation study to compare ODQA candidate solutions in the context of troubleshooting documents. We mainly focus on a well known open-source framework which is called Haystack. This framework comprises two key components which are the Retriever and the Reader. The Haystack Framework comes with several Retriever-Reader combinations and the choice of the best one is still unanswered till now. In this paper, we conduct an experimentation study to compare different Retriever-Reader combinations. Our aim is to come up with the best combination of components in regard to the speed and the processing power within the context of troubleshooting queries.},
  langid = {english},
  file = {/Users/A200017936/Zotero/storage/425ZNZ74/Syed et al. - 2021 - Question Answering Chatbot for Troubleshooting Queries based on Transfer Learning.pdf}
}

@article{thakurReviewOpentelemetryHTTP2022,
  title = {A Review on Opentelemetry and {{HTTP}} Implementation},
  author = {Thakur, Aadi and Chandak, M. B.},
  date = {2022-06-14},
  journaltitle = {International journal of health sciences},
  volume = {6},
  number = {S2},
  pages = {15013--15023},
  issn = {2550-696X},
  doi = {10.53730/ijhs.v6nS2.8972},
  url = {https://sciencescholar.us/journal/index.php/ijhs/article/view/8972},
  urldate = {2024-10-05},
  abstract = {Cloud-native is a strategy for developing and running applications that take advantage of the benefits of the cloud computing model. Companies building and operating applications by using a cloud-native architecture bring fresh ideas to the market faster and address customer demands more quickly. In the face of failures and extremely unpredictable demand, today's cloud-native application ecosystem is becoming highly dispersed, diversified, and complicated, making it impossible to forecast its behaviour. Observability is growing rapidly as a critical skill for monitoring and managing cloud-native applications in order to assure client satisfaction. Cloud-native Computing Foundation (CNCF) has introduced OpenTelemetry as its incubating project, which is an observability framework for cloud-native software. OpenTelemetry, which is\&nbsp;an open-source framework for distributed tracing, has emerged as the industry's leading standard for distributed tracing. This paper focuses on providing a systematic literature review of various services provided by OpenTelemetry.},
  issue = {S2},
  langid = {english},
  file = {/Users/A200017936/Zotero/storage/4VNQ54UH/Thakur und Chandak - 2022 - A review on opentelemetry and HTTP implementation.pdf}
}
